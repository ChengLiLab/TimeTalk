% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analysis.R
\name{RunTimeTalk}
\alias{RunTimeTalk}
\title{Function to run TimeTalk}
\usage{
RunTimeTalk(
  tmp.cds,
  tmp.seu,
  tmp.ident.1,
  tmp.ident.2,
  LRpairs.df,
  tmp.mra.res,
  tmp.orig.ident,
  tmp.lags = 1,
  tmp.winsz = 0.1,
  numPts = 200,
  tmp.cores = 10,
  tmp.SCC.cutoff = 0.2,
  tmp.granger.cutoff = 0.01
)
}
\arguments{
\item{tmp.cds}{input monocle3 cds object.}

\item{tmp.seu}{input Seurat v3 object.}

\item{tmp.ident.1}{input sender cell type.}

\item{tmp.ident.2}{input recevier cell type.}

\item{LRpairs.df}{LRpairs dataframe provided from CellTalkDB.}

\item{tmp.mra.res}{a data frame contains all the cell type specific master regulator information. To see more details, please see examples}

\item{tmp.orig.ident}{sample infor in seurat object.}

\item{tmp.lags}{integer specifying th order of lags to include in the auxiliary regression to perform granger causal test}

\item{tmp.winsz}{window size of the interpolation, default is 0.1.}

\item{numPts}{number of desired interpolated points, default is 200.}

\item{tmp.cores}{multisession of cores, Default is 10}

\item{tmp.SCC.cutoff}{sperman correlation cutoff to get LRpairs, default is 0.2}

\item{tmp.granger.cutoff}{granger test cutoff, default is 1e-2}
}
\value{
a data frame contain all the LR pairs and related TF's
}
\description{
This function implemented TimeTalk which utilize the pseudotime information to perform cell-cell communication in of two cell types.
}
\examples{
# ### build all the CellType specific TRN, not run it will take too long time
lapply(levels(seu), function(ii) {
  rtna <- myGetCellTypeSpecificTRN(
    tmp.seu = seu,
    tmp.ident = ii,
    gene.TF = gene.TF,
    tmp.phenotype = tmp.phenotype
  )
  saveRDS(rtna, file = myFileName(prefix = paste0("res/R/", ii, "RTN_rtna_object"), suffix = ".rds"))
})
### not run again!!!
tmp.all.de.RNA <- FindAllMarkers(object = seu,
                                 assay = "RNA",
                                 only.pos = T)
####read result
tmp.res.list <- lapply(levels(seu),FUN = function(ii){
  cat(ii,sep = "\n")
  tmp.ident <- ii
  tmp.files <- list.files(path = "res/R",pattern = paste0(tmp.ident,"RTN_rtna_object"))
  rtna <- readRDS(file = paste0("res/R/",tmp.files))
  mra <- tna.get(rtna, what="mra", ntop = -1)
  tmp.gene.use <- tmp.all.de.RNA \%>\%
    filter(cluster == tmp.ident) \%>\%
    filter(p_val_adj < 0.05) \%>\%
    pull(gene)
  mra.res <- mra \%>\%
    filter(Pvalue < 0.05) \%>\%
    filter(Regulon \%in\% tmp.gene.use) \%>\%
    mutate(group = tmp.ident)
  return(mra.res)
})
tmp.mra.res <- Reduce(rbind,tmp.res.list)
saveRDS(object = tmp.mra.res,file = "res/R/B_blastoid_RTN_mra_result.rds")
tmp.mra.res <- readRDS(file = "res/R/B_blastoid_RTN_mra_result.rds")
LRpairs.df <- read.delim(file = "database/Ligand-Receptor-Pairs/Mouse/Mouse-2020-Shao-LR-pairs.txt",stringsAsFactors = F)
TimeTalk.result <- RunTimeTalk(tmp.cds=tmp.cds,
             tmp.seu=tmp.seu,
             tmp.ident.1="EPI",
             tmp.ident.2 = "PE",
             LRpairs.df = LRpairs.df,
             tmp.mra.res = tmp.mra.res,tmp.winsz = 0.1,
             numPts = 200,tmp.SCC.cutoff = 0.2,tmp.granger.cutoff = 1e-2)
}

